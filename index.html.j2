<html>

    <head>

        <title>{{title}}</title>

        <!-- build:css style.css -->
        <link rel="stylesheet" href="/vendor/foundation/css/foundation.css">
        <link rel='stylesheet' href='/static/css/solarized_dark.css'>
        <!-- endbuild -->

        <style>
            body {
                font-family: "proxima-nova", sans-serif;
            }

            .highlight {
                border-radius: 4px;
                margin-bottom: 2.5rem;
            }

            .highlight pre {
                margin: 0rem;
                padding: 1rem 1.5rem;
                font-size: 14px;
            }

            .highlight span {
                font-weight: 400;
                font-style: normal;
                font-family: "source-code-pro", "anonymous-pro", monospace;
            }
        </style>

        <script src="https://use.typekit.net/zhe8yze.js"></script>
        <script>try{Typekit.load({ async: true });}catch(e){}</script>
    </head>

    <body>

        <div class="row">

            <div class="large-12 columns" style="margin-top:3em;">
                <h1>ReactIRC</h1>
                <hr>
            </div>

        </div>

        <div class="row">

            <div class="large-12 columns">

                <h4 style="color:grey;">ReactIRC is a flask-inspired library for developing IRC
                    bots. It comes with an embedded web server for receiving POST requests
                    from webhook enabled services.</h4>

            </div>

        </div>

        <br>

        <div class="row">

            <div class="large-12 columns">

                <h2>Install</h2>
                <hr>

            </div>

        </div>

        <div class="row">

            <div class="large-6 columns">

                <h4><center>Git</center></h4>

{% highlight 'bash' %}
$ git clone http://github.com/citruspi/ReactIRC.git
$ cd ReactIRC
$ python setup.py install
{% endhighlight %}

            </div>

            <div class="large-6 columns">

                <h4><center>PyPi</center></h4>

{% highlight 'bash' %}
$ pip install reactirc
{% endhighlight %}

            </div>

        </div>

        <br>
        <br>

        <div class="row">

            <div class="large-12 columns">
                <h2>Examples</h2>
                <hr>
            </div>
        </div>

        <div class="row">

            <div class="large-4 columns">
                <h3>Greeter Bot</h3>

                Greeter Bot listens for messages which match the pattern
                <code>Hey, my name is (name)</code> and replies by greeting the user
                with <code>Hey there (name)!</code>.
            </div>

            <div class="large-8 columns">

{% highlight 'python', lineno='inline' %}
from ReactIRC import Bot

bot = Bot()

@bot.on(r'^Hey, my name is (.*)$')
def greeter(name):
    return 'Hey there {}!'.format(name)

bot.monitor(nick='bot', channels='#bots')
{% endhighlight %}
            </div>

        </div>

        <br>

        <div class="row">

            <div class="large-4 columns">
                <h3>Karma Bot</h3>

                Karma Bot manages user karma. User's can <code>++</code> and
                <code>--</code> each other to increase and decrease karma.
                Simply entering <code>karma</code> will return your karma count,
                and including a user (<code>karma citruspi</code>) will return the karma count for the targetted user.
            </div>

            <div class="large-8 columns">

{% highlight 'python', lineno='inline' %}
from ReactIRC import Bot

bot = Bot()
scores = {}

@bot.on(r'^karma$')
@bot.on(r'^karma ([\S]+)$')
def karma_status(user=None):
    if user is None:
        user = irc.context['sender']

    try:
        return '{} has {} karma'.format(user, scores[user])
    except KeyError:
        return '{} has 0 karma'.format(user)

@bot.on(r'^([\S]+)(\+\+|\-\-){1}$')
def karma_adjustment(user, direction):
    try:
        if direction == '--':
            scores[user] -= 1

        elif direction == '++':
            scores[user] += 1
    except KeyError:
        scores[user] = 0

bot.monitor(nick='bot', channels='#bots')
{% endhighlight %}
            </div>

        </div>

        <div class="row">

            <div class="large-12 columns">

                <br>
                <hr>

            </div>

        <div class="row">

            <div class="large-6 columns">

                <h3><small>made in New York with &hearts; by @citruspi</small></h3>

            </div>

            <div class="large-6 columns">

                <h3 class="right"><small>copyright 2015 under MIT</small></h3>
            </div>

        </div>

        <br>

    </body>

</html>
